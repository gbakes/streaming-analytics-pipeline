connectors:
  postgres-source:
    name: "postgres-connector"
    config:
      connector.class: "io.debezium.connector.postgresql.PostgresConnector"
      tasks.max: "1"
      database.hostname: "${POSTGRES_HOST}"
      database.port: "${POSTGRES_PORT}"
      database.user: "${POSTGRES_USER}"
      database.password: "${POSTGRES_PASSWORD}"
      database.dbname: "${POSTGRES_DB}"
      database.server.name: "${DEBEZIUM_SERVER_NAME}"
      topic.prefix: "${DEBEZIUM_SERVER_NAME}"
      table.include.list: "public.customers"
      plugin.name: "pgoutput"
      transforms: "unwrap"
      transforms.unwrap.type: "io.debezium.transforms.ExtractNewRecordState"
      transforms.unwrap.drop.tombstones: "false"
      transforms.unwrap.delete.handling.mode: "rewrite"
      slot.name: "${DEBEZIUM_SLOT_NAME}"

  customers-s3-sink:
    name: "customers-s3-sink"
    config:
      connector.class: "io.confluent.connect.s3.S3SinkConnector"
      tasks.max: "1"
      topics: "postgres-server.public.customers"
      s3.bucket.name: "${MINIO_BUCKET_NAME}"
      s3.region: "us-east-1"
      s3.endpoint: "${MINIO_INTERNAL_ENDPOINT}"
      aws.access.key.id: "${MINIO_ACCESS_KEY}"
      aws.secret.access.key: "${MINIO_SECRET_KEY}"
      storage.class: "io.confluent.connect.s3.storage.S3Storage"
      format.class: "io.confluent.connect.s3.format.json.JsonFormat"
      partitioner.class: "io.confluent.connect.storage.partitioner.DefaultPartitioner"
      flush.size: "1000"
      rotate.schedule.interval.ms: "60000"
      store.url: "${MINIO_INTERNAL_ENDPOINT}"
      path.format: "customers/YYYY/MM/dd/HH"
      locale: "US"
      timezone: "UTC"